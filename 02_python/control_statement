# 제어문
기본적으로 위에서 아래로 `순차적`으로 명령을 수행함.

## 조건문(Conditional Statement)
- 기본 조건문
```python
if <expression>:
    # Run this Code block
else:
    # Run this Code block
```

- 복수 조건문
```python
if <expression>:
    # Run this Code block
elif <expression>:
    # Run this Code block
else:
    # Run this Code block
```
> `else`는 나머지 모든 상황을 의미하기 때문에 `조건을 달면 오류`가 난다.

-중첩 조건문
```python
if <exp>:
    # Code Block
    if <exp>:
      # Code Block
else:
    # Code Block
```

## 반복문(Loop Statement)
### For문
- 시퀀스(string, tuple, list, range)를 포함한 순회가능한 객체(`iterable`)요소를 모두 순회함.
```python
for <변수명> in <iterable>:
    # Code block
```
>`end = " "`를 쓰면 한 줄로 나열됨

> `len()`: 해당 문자열의 길이

### While
- `종료 조건`에 해당하는 코드를 통해 반복문을 `종료시켜야 함`.
- 조건식이 `참인 경우` `반복`적으로 코드 실행
> 종료 조건을 꼭 심어 놔야 한다.
```python
While <expression>:
    # code block
```

### 반복문 제어
- break: 종료
- continue: continue 이후의 코드 블록은 수행하지 않고, 다음 반복을 수행.
- for-else: 끝까지 반복문을 실행한 이후에 else문 실행